// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Context;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(TeamContext))]
    [Migration("20220621071358_migration")]
    partial class migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Models.File", b =>
                {
                    b.Property<int>("IdFile")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.Property<int>("IdTeam")
                        .HasColumnType("int");

                    b.HasKey("IdFile");

                    b.HasIndex("IdTeam");

                    b.ToTable("File");

                    b.HasData(
                        new
                        {
                            IdFile = 1,
                            FileExtension = "jpg",
                            FileName = "xxx",
                            FileSize = 2,
                            IdTeam = 1
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Member", b =>
                {
                    b.Property<int>("IdMember")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdOrganization")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NickName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdMember");

                    b.HasIndex("IdOrganization");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            IdMember = 1,
                            IdOrganization = 1,
                            Name = "aaaaa",
                            NickName = "ssss",
                            Surname = "fffff"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Membership", b =>
                {
                    b.Property<int>("IdMember")
                        .HasColumnType("int");

                    b.Property<int>("IdTeam")
                        .HasColumnType("int");

                    b.Property<DateTime>("MembershipDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TeamIdTeam")
                        .HasColumnType("int");

                    b.HasKey("IdMember", "IdTeam");

                    b.HasIndex("TeamIdTeam");

                    b.ToTable("MemberShip");

                    b.HasData(
                        new
                        {
                            IdMember = 1,
                            IdTeam = 1,
                            MembershipDate = new DateTime(2022, 6, 21, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Domain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organization");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Domain = "sssss",
                            Name = "dddd"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Team", b =>
                {
                    b.Property<int>("IdTeam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("IdOrganization")
                        .HasColumnType("int");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTeam");

                    b.HasIndex("IdOrganization");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            IdTeam = 1,
                            Description = "asadasdaf",
                            IdOrganization = 1,
                            TeamName = "zzzzz"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.File", b =>
                {
                    b.HasOne("WebApplication1.Models.Team", "Team")
                        .WithMany("File")
                        .HasForeignKey("IdTeam")
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("WebApplication1.Models.Member", b =>
                {
                    b.HasOne("WebApplication1.Models.Organization", "Organization")
                        .WithMany("Member")
                        .HasForeignKey("IdOrganization")
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("WebApplication1.Models.Membership", b =>
                {
                    b.HasOne("WebApplication1.Models.Member", "Member")
                        .WithMany("Membership")
                        .HasForeignKey("IdMember")
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Team", "Team")
                        .WithMany("Membership")
                        .HasForeignKey("TeamIdTeam");

                    b.Navigation("Member");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("WebApplication1.Models.Team", b =>
                {
                    b.HasOne("WebApplication1.Models.Organization", "Organization")
                        .WithMany("Team")
                        .HasForeignKey("IdOrganization")
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("WebApplication1.Models.Member", b =>
                {
                    b.Navigation("Membership");
                });

            modelBuilder.Entity("WebApplication1.Models.Organization", b =>
                {
                    b.Navigation("Member");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("WebApplication1.Models.Team", b =>
                {
                    b.Navigation("File");

                    b.Navigation("Membership");
                });
#pragma warning restore 612, 618
        }
    }
}
